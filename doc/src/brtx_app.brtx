

{header|
    {title|The {t|brtx} Application}
}


{section 1|Usage}

{section 2|Options}

Here is the usage information:
{code}
usage: brtx [-i file] [-o file] [-help]
  -version               
	Print version and exit
  -license               
	Print license and exit
  -html                  
	Output HTML format (default)
  -latex                 
	Output LaTeX format
  -toc                   
	Get the table of contents (as a Bracetax list)
  -i <file>              
	Set input file (default or "-" is standard input)
  -o <file>              
	Set output file (default or "-" is standard output)
  -doc                   
	Output a complete document (with header/footer)
  -title <text>          
	Set the title of the document ('head.title' for XHTML,
	PDF meta-data for LaTeX), requires -doc
  -link-css <url>        
	Add a link to a CSS, requires -html,-doc
  -css-hook <text>       
	Add a class="text..." to all tags, requires -html
  -use-package <name>    
	Use a given package, requires -latex,-doc
  -href-footnote         
	Treat links as LaTeX footnotes with URLs, requires -latex
  -print-comments        
	Activate the transmission of brtx comments to the output's comments
	(-html or -latex)
  -deny-bypass           
	Treat all {bypass} as {code} (security of interpreted web-apps …)
  -ignore-header         
	Do not process the {header| ... } part
  -no-warn-error         
	Do not treat warnings as errors (return 0 to shell/make/...)
  -warn-error            
	Treat warnings as errors (default, return 2 to shell)
  -table-caption-before  
	In LaTeX output, put the captions before the tables
	(like LNCS, IEEE, …)
  -help                  Display this list of options
  --help                 Display this list of options
{end}


{section 2|Examples}

#{section 3|Transform {i|bracetax} syntax}

Convert a bracetax file to XHTML:
{code}
brtx -html -i file.brtx -o file.html
{end}
{p}
Convert a file to LaTeX:
{code}
brtx -latex -i file.brtx -o file.tex
{end}
{p}

The option {t|-doc} adds header and footer (for both HTML and LaTeX):
{code e}
brtx -html -i file.brtx -o file.html -doc
{e}
will provide the {t|<!DOCTYPE html ...} etc.
{p}

Transform any string:
{code}
 $ echo 'I say {b|Hello} {i|world}{~}!!' | brtx -html
 <div class="p">I say <b>Hello</b> <i>world</i>&nbsp;!!</div>
{end}


